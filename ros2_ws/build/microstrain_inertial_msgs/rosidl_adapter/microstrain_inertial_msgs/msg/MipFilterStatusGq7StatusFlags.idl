// generated from rosidl_adapter/resource/msg.idl.em
// with input from microstrain_inertial_msgs/msg/MipFilterStatusGq7StatusFlags.msg
// generated code does not contain a copyright notice


module microstrain_inertial_msgs {
  module msg {
    module MipFilterStatusGq7StatusFlags_Constants {
      @verbatim (language="comment", text=
        "Possible values for filter_condition when the connected device is a prospect device (GQ7, CV7, etc)")
      const uint8 FILTER_CONDITION_STABLE = 1;
      const uint8 FILTER_CONDITION_CONVERGING = 2;
      const uint8 FILTER_CONDITION_UNSTABLE = 3;
    };
    @verbatim (language="comment", text=
      "Message definition for the Status Flags (GQ7, CV7, etc.) field of https://s3.amazonaws.com/files.microstrain.com/GQ7+User+Manual/external_content/dcp/Data/filter_data/data/mip_field_filter_status.htm?Highlight=filter%20status" "\n"
      "  Note: This message will never be published on it's own, only included in other messages.")
    struct MipFilterStatusGq7StatusFlags {
      @verbatim (language="comment", text=
        "See FILTER_CONDITION_* enums for possible values")
      uint8 filter_condition;

      boolean roll_pitch_warning;

      boolean heading_warning;

      boolean position_warning;

      boolean velocity_warning;

      boolean imu_bias_warning;

      boolean gnss_clk_warning;

      boolean antenna_lever_arm_warning;

      boolean mounting_transform_warning;

      @verbatim (language="comment", text=
        "No time synchronization pulse detected")
      boolean time_sync_warning;

      @verbatim (language="comment", text=
        "This includes all bits between 12 and 15, if any of them are set there is a GQ7 solution error")
      boolean solution_error;
    };
  };
};
