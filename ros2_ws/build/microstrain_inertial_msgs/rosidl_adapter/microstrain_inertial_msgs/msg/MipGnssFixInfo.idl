// generated from rosidl_adapter/resource/msg.idl.em
// with input from microstrain_inertial_msgs/msg/MipGnssFixInfo.msg
// generated code does not contain a copyright notice

#include "microstrain_inertial_msgs/msg/MipGnssFixInfoFixFlags.idl"
#include "microstrain_inertial_msgs/msg/MipHeader.idl"

module microstrain_inertial_msgs {
  module msg {
    module MipGnssFixInfo_Constants {
      @verbatim (language="comment", text=
        "Valid values for the fix_type field")
      const uint8 FIX_TYPE_FIX_3D = 0;
      const uint8 FIX_TYPE_FIX_2D = 1;
      const uint8 FIX_TYPE_FIX_TIME_ONLY = 2;
      const uint8 FIX_TYPE_FIX_NONE = 3;
      const uint8 FIX_TYPE_FIX_INVALID = 4;
      const uint8 FIX_TYPE_FIX_RTK_FLOAT = 5;
      const uint8 FIX_TYPE_FIX_RTK_FIXED = 6;
    };
    @verbatim (language="comment", text=
      "Message definition for the MIP field https://s3.amazonaws.com/files.microstrain.com/GQ7+User+Manual/external_content/dcp/Data/gnss_recv_1/data/mip_field_gnss_fix_info.htm")
    struct MipGnssFixInfo {
      @verbatim (language="comment", text=
        "Header containing common information" "\n"
        "  header.frame_id has no meaning in this message")
      microstrain_inertial_msgs::msg::MipHeader header;

      @verbatim (language="comment", text=
        "Fix type. See FIX_TYPE_* enums for possible values")
      uint8 fix_type;

      @verbatim (language="comment", text=
        "Number of satellites in view for this receiver")
      uint8 num_sv;

      @verbatim (language="comment", text=
        "Parsed out version of the fix_flags bitfield")
      microstrain_inertial_msgs::msg::MipGnssFixInfoFixFlags fix_flags;
    };
  };
};
