// generated from rosidl_adapter/resource/msg.idl.em
// with input from microstrain_inertial_msgs/msg/MipFilterGnssDualAntennaStatus.msg
// generated code does not contain a copyright notice

#include "microstrain_inertial_msgs/msg/MipFilterGnssDualAntennaStatusStatusFlags.idl"
#include "microstrain_inertial_msgs/msg/MipHeader.idl"

module microstrain_inertial_msgs {
  module msg {
    module MipFilterGnssDualAntennaStatus_Constants {
      @verbatim (language="comment", text=
        "Possible values for fix_type")
      const uint8 FIX_TYPE_FIX_NONE = 0;
      const uint8 FIX_TYPE_FIX_DA_FLOAT = 1;
      const uint8 FIX_TYPE_FIX_DA_FIXED = 2;
    };
    @verbatim (language="comment", text=
      "Message definition for the MIP field https://s3.amazonaws.com/files.microstrain.com/GQ7+User+Manual/external_content/dcp/Data/filter_data/data/mip_field_filter_gnss_dual_antenna_status.htm")
    struct MipFilterGnssDualAntennaStatus {
      @verbatim (language="comment", text=
        "Header containing common information" "\n"
        "  header.frame_id has no meaning in this message")
      microstrain_inertial_msgs::msg::MipHeader header;

      @verbatim (language="comment", text=
        "Last dual-antenna GNSS aiding measurement time of week (seconds)")
      float time_of_week;

      @verbatim (language="comment", text=
        "Heading in radians")
      float heading;

      @verbatim (language="comment", text=
        "Heading uncertainty in radians")
      float heading_unc;

      @verbatim (language="comment", text=
        "Fix type indicator. See FIX_TYPE_* enums for possible values")
      uint8 fix_type;

      @verbatim (language="comment", text=
        "Parsed out version of the Status Flags bitfield")
      microstrain_inertial_msgs::msg::MipFilterGnssDualAntennaStatusStatusFlags status_flags;

      @verbatim (language="comment", text=
        "Valid flags (0 = invalid, 1 = valid)")
      uint16 valid_flags;
    };
  };
};
