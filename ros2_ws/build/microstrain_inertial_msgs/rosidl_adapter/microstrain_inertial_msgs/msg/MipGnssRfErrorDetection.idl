// generated from rosidl_adapter/resource/msg.idl.em
// with input from microstrain_inertial_msgs/msg/MipGnssRfErrorDetection.msg
// generated code does not contain a copyright notice

#include "microstrain_inertial_msgs/msg/MipHeader.idl"

module microstrain_inertial_msgs {
  module msg {
    module MipGnssRfErrorDetection_Constants {
      @verbatim (language="comment", text=
        "Enum values for rf_band field")
      const uint8 RF_BAND_UNKNOWN = 0;
      const uint8 RF_BAND_L1 = 1;
      const uint8 RF_BAND_L2 = 2;
      const uint8 RF_BAND_L5 = 5;
      @verbatim (language="comment", text=
        "Enum values for jamming_state field")
      const uint8 JAMMING_STATE_UNKNOWN = 0;
      const uint8 JAMMING_STATE_NONE = 1;
      const uint8 JAMMING_STATE_PARTIAL = 2;
      const uint8 JAMMING_STATE_SIGNIFICANT = 3;
      @verbatim (language="comment", text=
        "Enum values for spoofing_state field")
      const uint8 SPOOFING_STATE_UNKNOWN = 0;
      const uint8 SPOOFING_STATE_NONE = 1;
      const uint8 SPOOFING_STATE_PARTIAL = 2;
      const uint8 SPOOFING_STATE_SIGNIFICANT = 3;
    };
    @verbatim (language="comment", text=
      "Message definition for the MIP field https://s3.amazonaws.com/files.microstrain.com/GQ7+User+Manual/external_content/dcp/Data/gnss_recv_1/data/mip_field_gnss_rf_error_detection.htm")
    struct MipGnssRfErrorDetection {
      @verbatim (language="comment", text=
        "Header containing common information" "\n"
        "  header.frame_id has no meaning in this message")
      microstrain_inertial_msgs::msg::MipHeader header;

      @verbatim (language="comment", text=
        "RF Band of the reported information. See RF_BAND_* enums for possible values")
      uint8 rf_band;

      @verbatim (language="comment", text=
        "GNSS Jamming State (as reported by the GNSS module). See JAMMING_STATE_* enums for possible values")
      uint8 jamming_state;

      @verbatim (language="comment", text=
        "GNSS Spoofing State (as reported by the GNSS module). See SPOOFING_STATE_* enums for possible values")
      uint8 spoofing_state;
    };
  };
};
