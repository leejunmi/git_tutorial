// generated from rosidl_adapter/resource/msg.idl.em
// with input from microstrain_inertial_msgs/msg/MipFilterAidingMeasurementSummary.msg
// generated code does not contain a copyright notice

#include "microstrain_inertial_msgs/msg/MipFilterAidingMeasurementSummaryIndicator.idl"
#include "microstrain_inertial_msgs/msg/MipHeader.idl"

module microstrain_inertial_msgs {
  module msg {
    module MipFilterAidingMeasurementSummary_Constants {
      @verbatim (language="comment", text=
        "Possible values for type")
      const uint8 TYPE_GNSS = 1;
      const uint8 TYPE_DUAL_ANTENNA = 2;
      const uint8 TYPE_HEADING = 3;
      const uint8 TYPE_PRESSURE = 4;
      const uint8 TYPE_MAGNETOMETER = 5;
      const uint8 TYPE_SPEED = 6;
    };
    @verbatim (language="comment", text=
      "Message definition for the MIP field https://s3.amazonaws.com/files.microstrain.com/GQ7+User+Manual/external_content/dcp/Data/filter_data/data/mip_field_filter_aiding_measurement_summary.htm")
    struct MipFilterAidingMeasurementSummary {
      @verbatim (language="comment", text=
        "Header containing common information" "\n"
        "  header.frame_id has no meaning in this message")
      microstrain_inertial_msgs::msg::MipHeader header;

      @verbatim (language="comment", text=
        "GPS time of week (seconds)")
      double time_of_week;

      @verbatim (language="comment", text=
        "Source used when type is set to TYPE_GNSS to specify which GNSS module this message is for")
      uint8 source;

      @verbatim (language="comment", text=
        "Type of the aiding measurement. See TYPE_* enums for possible values")
      uint8 type;

      @verbatim (language="comment", text=
        "Parsed version of indicator bitfield")
      microstrain_inertial_msgs::msg::MipFilterAidingMeasurementSummaryIndicator indicator;
    };
  };
};
